{"version":3,"file":"static/js/503.098992d1.chunk.js","mappings":"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","sources":["constants/menu.jsx","helpers/menu.js","layouts/Horizontal/Menu.js","layouts/Horizontal/Navbar.js"],"sourcesContent":["//External Lib Import\n\nimport { RiDashboardLine } from \"react-icons/ri\";\n\nimport { useTranslation } from \"react-i18next\";\n\nconst MenuItems = () => {\n  const { t } = useTranslation();\n\n\n\n  return [\n    { key: \"navigation\", label: t(\"Admin Routes\"), isTitle: true },\n    {\n      key: \"Dashboard\",\n      label: t(\"Data Collection Form\"),\n      url: \"/dashboard\",\n      isTitle: false,\n      icon: <RiDashboardLine className=\"side-bar-item-icon\" />,\n    },\n\n\n\n\n\n  ];\n};\n\n\nexport default MenuItems;\n","//External Lib Import\nimport MenuItems from \"../constants/menu\";\n\nconst getMenuItems = () => {\n  return MenuItems();\n};\n\nconst findAllParent = (menuItems, menuItem) => {\n  let parents = [];\n  const parent = findMenuItem(menuItems, menuItem[\"parentKey\"]);\n\n  if (parent) {\n    parents.push(parent[\"key\"]);\n    if (parent[\"parentKey\"])\n      parents = [...parents, ...findAllParent(menuItems, parent)];\n  }\n  return parents;\n};\n\nconst findMenuItem = (menuItems, menuItemKey) => {\n  if (menuItems && menuItemKey) {\n    for (var i = 0; i < menuItems.length; i++) {\n      if (menuItems[i].key === menuItemKey) {\n        return menuItems[i];\n      }\n      var found = findMenuItem(menuItems[i].children, menuItemKey);\n      if (found) return found;\n    }\n  }\n  return null;\n};\n\nexport { getMenuItems, findAllParent, findMenuItem };\n","// @flow\nimport React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport { findAllParent, findMenuItem } from \"../../helpers/menu\";\n\nconst MenuItemWithChildren = ({\n  item,\n  tag,\n  linkClassName,\n  className,\n  subMenuClassNames,\n  activeMenuItems,\n  toggleMenu,\n}) => {\n  const Tag = tag;\n\n  const [open, setOpen] = useState(activeMenuItems.includes(item.key));\n\n  const showMenu = window.screen.width <= 768 && open;\n\n  useEffect(() => {\n    setOpen(activeMenuItems.includes(item.key));\n  }, [activeMenuItems, item]);\n\n  const toggleMenuItem = (e) => {\n    e.preventDefault();\n    const status = !open;\n    setOpen(status);\n    if (toggleMenu) toggleMenu(item, status);\n    return false;\n  };\n\n  return (\n    <Tag\n      className={classNames(\n        \"dropdown\",\n        className,\n        activeMenuItems.includes(item.key) ? \"active\" : \"\",\n      )}\n    >\n      <Link\n        to=\"/#\"\n        onClick={toggleMenuItem}\n        data-menu-key={item.key}\n        className={classNames(\"dropdown-toggle\", \"arrow-none\", linkClassName)}\n        id={item.key}\n        role=\"button\"\n        data-bs-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded={open}\n      >\n        {item.icon && item.icon}\n        <span> {item.label} </span>\n        <div className=\"arrow-down\"></div>\n      </Link>\n\n      {item.children ? (\n        <div\n          className={classNames(subMenuClassNames, { show: showMenu })}\n          aria-labelledby={item.key}\n        >\n          {item.children.map((child, i) => {\n            return (\n              <React.Fragment key={i}>\n                {child.children ? (\n                  <>\n                    {/* parent */}\n                    <MenuItemWithChildren\n                      item={child}\n                      tag=\"div\"\n                      linkClassName={classNames(\n                        \"dropdown-item\",\n                        activeMenuItems.includes(child.key) ? \"active\" : \"\",\n                      )}\n                      activeMenuItems={activeMenuItems}\n                      className=\"\"\n                      subMenuClassNames=\"dropdown-menu\"\n                      toggleMenu={toggleMenu}\n                    />\n                  </>\n                ) : (\n                  <>\n                    {/* child */}\n                    <MenuItemLink\n                      item={child}\n                      className={classNames(\"dropdown-item\", {\n                        active: activeMenuItems.includes(child.key),\n                      })}\n                    />\n                  </>\n                )}\n              </React.Fragment>\n            );\n          })}\n        </div>\n      ) : null}\n    </Tag>\n  );\n};\n\nconst MenuItem = ({ item, className, linkClassName }) => {\n  return (\n    <li className={classNames(\"nav-item\", className)}>\n      <MenuItemLink item={item} className={linkClassName} />\n    </li>\n  );\n};\n\nconst MenuItemLink = ({ item, className }) => {\n  return (\n    <Link\n      to={item.url}\n      target={item.target}\n      className={classNames(className)}\n      data-menu-key={item.key}\n    >\n      {item.icon && item.icon}\n      <span> {item.label} </span>\n    </Link>\n  );\n};\n\n/**\n * Renders the application menu\n */\n\ntype AppMenuProps = {\n  menuItems: Array<any>,\n};\n\nconst AppMenu = ({\n  menuItems,\n}: AppMenuProps): React$Element<React$FragmentType> => {\n  const menuRef = useRef(null);\n  let location = useLocation();\n\n  const [topnavMenuItems, setTopnavMenuItems] = useState([]);\n  const [activeMenuItems, setActiveMenuItems] = useState([]);\n\n  /*\n   * toggle the menus\n   */\n  const toggleMenu = (menuItem, show) => {\n    if (show)\n      setActiveMenuItems([\n        menuItem[\"key\"],\n        ...findAllParent(topnavMenuItems, menuItem),\n      ]);\n  };\n\n  /**\n   * activate the menuitems\n   */\n  const activeMenu = useCallback(() => {\n    const div = document.getElementById(\"main-side-menu\");\n    let matchingMenuItem = null;\n\n    if (div) {\n      let items: any = div.getElementsByTagName(\"a\");\n      for (let i = 0; i < items.length; ++i) {\n        if (location.pathname === items[i].pathname) {\n          matchingMenuItem = items[i];\n          break;\n        }\n      }\n\n      if (matchingMenuItem) {\n        const mid = matchingMenuItem.getAttribute(\"data-menu-key\");\n        const activeMt = findMenuItem(topnavMenuItems, mid);\n        if (activeMt) {\n          setActiveMenuItems([\n            activeMt[\"key\"],\n            ...findAllParent(topnavMenuItems, activeMt),\n          ]);\n        }\n      }\n    }\n  }, [location.pathname, topnavMenuItems]);\n\n  useEffect(() => {\n    //controlling how many menu items can be displayed in it\n    let modifiedMenuItems = menuItems\n      ? menuItems.filter((item) => (!item.isTitle ? item : null))\n      : [];\n    const defaultDisplayedItems = window.screen.width > 1366 ? 7 : 5;\n\n    if (modifiedMenuItems.length > defaultDisplayedItems) {\n      const displayedItems = modifiedMenuItems.slice(0, defaultDisplayedItems);\n\n      const moreChildren = modifiedMenuItems\n        .slice(defaultDisplayedItems, menuItems.length)\n        .map((i) => ({ ...i, parentKey: \"more\" }));\n\n      const otherItems = {\n        id: modifiedMenuItems.length + 1,\n        path: \"/\",\n        label: \"More\",\n        icon: \"uil-ellipsis-h\",\n        key: \"more\",\n        children: moreChildren,\n      };\n      modifiedMenuItems = [...displayedItems, otherItems];\n      setTopnavMenuItems(modifiedMenuItems);\n    } else {\n      setTopnavMenuItems(modifiedMenuItems);\n    }\n  }, [menuItems]);\n\n  useEffect(() => {\n    if (topnavMenuItems && topnavMenuItems.length > 0) activeMenu();\n  }, [activeMenu, topnavMenuItems]);\n\n  return (\n    <>\n      <ul className=\"navbar-nav\" ref={menuRef} id=\"main-side-menu\">\n        {(topnavMenuItems || []).map((item, idx) => {\n          return (\n            <React.Fragment key={idx}>\n              {item.children ? (\n                <MenuItemWithChildren\n                  item={item}\n                  tag=\"li\"\n                  className=\"nav-item\"\n                  subMenuClassNames=\"dropdown-menu\"\n                  activeMenuItems={activeMenuItems}\n                  linkClassName=\"nav-link\"\n                  toggleMenu={toggleMenu}\n                />\n              ) : (\n                <MenuItem\n                  item={item}\n                  linkClassName=\"nav-link dropdown-toggle arrow-none\"\n                  className={{ active: activeMenuItems.includes(item.key) }}\n                />\n              )}\n            </React.Fragment>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default AppMenu;\n","// @flow\nimport React from \"react\";\nimport AppMenu from \"./Menu\";\nimport { Collapse } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\nimport { getMenuItems } from \"../../helpers/menu\";\n\nconst Navbar = (props) => {\n  const inputTheme = \"light\";\n\n  return (\n    <>\n      <div className=\"topnav shadow-sm\">\n        <div className=\"container-fluid\">\n          <nav\n            className={classNames(\n              \"navbar\",\n              \"navbar-expand-lg\",\n              \"topnav-menu\",\n              \"navbar-\" + inputTheme,\n            )}\n          >\n            <Collapse\n              in={props.isMenuOpened}\n              className=\"navbar-collapse\"\n              id=\"topnav-menu-content\"\n            >\n              <div>\n                <AppMenu menuItems={getMenuItems()} />\n              </div>\n            </Collapse>\n          </nav>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Navbar;\n"],"names":["t","useTranslation","key","label","isTitle","url","icon","_jsx","RiDashboardLine","className","getMenuItems","MenuItems","findAllParent","menuItems","menuItem","parents","parent","findMenuItem","push","concat","_toConsumableArray","menuItemKey","i","length","found","children","MenuItemWithChildren","_ref","item","tag","linkClassName","subMenuClassNames","activeMenuItems","toggleMenu","Tag","_useState","useState","includes","_useState2","_slicedToArray","open","setOpen","showMenu","window","screen","width","useEffect","_jsxs","classNames","Link","to","onClick","e","preventDefault","status","id","role","show","map","child","React","_Fragment","MenuItemLink","active","MenuItem","_ref2","_ref3","target","_ref4","menuRef","useRef","location","useLocation","_useState3","_useState4","topnavMenuItems","setTopnavMenuItems","_useState5","_useState6","setActiveMenuItems","activeMenu","useCallback","div","document","getElementById","matchingMenuItem","items","getElementsByTagName","pathname","mid","getAttribute","activeMt","modifiedMenuItems","filter","defaultDisplayedItems","displayedItems","slice","moreChildren","_objectSpread","parentKey","otherItems","path","ref","idx","props","Collapse","in","isMenuOpened","AppMenu"],"sourceRoot":""}