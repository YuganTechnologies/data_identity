{"version":3,"file":"static/js/216.2603fc30.chunk.js","mappings":"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","sources":["constants/menu.jsx","helpers/menu.js","layouts/Menu.js","layouts/LeftSidebar.js"],"sourcesContent":["//External Lib Import\n\nimport { RiDashboardLine } from \"react-icons/ri\";\n\nimport { useTranslation } from \"react-i18next\";\n\nconst MenuItems = () => {\n  const { t } = useTranslation();\n\n\n\n  return [\n    { key: \"navigation\", label: t(\"Admin Routes\"), isTitle: true },\n    {\n      key: \"Dashboard\",\n      label: t(\"Data Collection Form\"),\n      url: \"/dashboard\",\n      isTitle: false,\n      icon: <RiDashboardLine className=\"side-bar-item-icon\" />,\n    },\n\n\n\n\n\n  ];\n};\n\n\nexport default MenuItems;\n","//External Lib Import\nimport MenuItems from \"../constants/menu\";\n\nconst getMenuItems = () => {\n  return MenuItems();\n};\n\nconst findAllParent = (menuItems, menuItem) => {\n  let parents = [];\n  const parent = findMenuItem(menuItems, menuItem[\"parentKey\"]);\n\n  if (parent) {\n    parents.push(parent[\"key\"]);\n    if (parent[\"parentKey\"])\n      parents = [...parents, ...findAllParent(menuItems, parent)];\n  }\n  return parents;\n};\n\nconst findMenuItem = (menuItems, menuItemKey) => {\n  if (menuItems && menuItemKey) {\n    for (var i = 0; i < menuItems.length; i++) {\n      if (menuItems[i].key === menuItemKey) {\n        return menuItems[i];\n      }\n      var found = findMenuItem(menuItems[i].children, menuItemKey);\n      if (found) return found;\n    }\n  }\n  return null;\n};\n\nexport { getMenuItems, findAllParent, findMenuItem };\n","import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Collapse } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\nimport { findAllParent, findMenuItem } from \"../helpers/menu\";\n\nconst MenuItemWithChildren = ({\n  item,\n  linkClassName,\n  subMenuClassNames,\n  activeMenuItems,\n  toggleMenu,\n}) => {\n  const [open, setOpen] = useState(activeMenuItems.includes(item.key));\n\n  useEffect(() => {\n    setOpen(activeMenuItems.includes(item.key));\n  }, [activeMenuItems, item]);\n\n  const toggleMenuItem = (e) => {\n    e.preventDefault();\n    const status = !open;\n    setOpen(status);\n    if (toggleMenu) toggleMenu(item, status);\n    return false;\n  };\n\n  return (\n    <li className={classNames(\"side-nav-item\", { \"menuitem-active\": open })}>\n      <Link\n        to=\"/#\"\n        onClick={toggleMenuItem}\n        data-menu-key={item.key}\n        aria-expanded={open}\n        className={classNames(\"has-arrow\", \"side-sub-nav-link\", linkClassName, {\n          \"menuitem-active\": activeMenuItems.includes(item.key) ? \"active\" : \"\",\n        })}\n      >\n        {item.icon && item.icon}\n        {!item.badge ? (\n          <span className=\"menu-arrow\"></span>\n        ) : (\n          <span\n            className={classNames(\n              \"badge\",\n              \"bg-\" + item.badge.variant,\n              \"float-end\",\n              {\n                \"text-dark\": item.badge.variant === \"light\",\n              },\n            )}\n          >\n            {item.badge.text}\n          </span>\n        )}\n        <span> {item.label} </span>\n      </Link>\n      <Collapse in={open}>\n        <ul className={classNames(subMenuClassNames)}>\n          {item.children.map((child, i) => {\n            return (\n              <React.Fragment key={i}>\n                {child.children ? (\n                  <>\n                    {/* parent */}\n                    <MenuItemWithChildren\n                      item={child}\n                      linkClassName={\n                        activeMenuItems.includes(child.key) ? \"active\" : \"\"\n                      }\n                      activeMenuItems={activeMenuItems}\n                      subMenuClassNames=\"side-nav-third-level\"\n                      toggleMenu={toggleMenu}\n                    />\n                  </>\n                ) : (\n                  <>\n                    {/* child */}\n                    <MenuItem\n                      item={child}\n                      className={\n                        activeMenuItems.includes(child.key)\n                          ? \"menuitem-active\"\n                          : \"\"\n                      }\n                      linkClassName={\n                        activeMenuItems.includes(child.key) ? \"active\" : \"\"\n                      }\n                    />\n                  </>\n                )}\n              </React.Fragment>\n            );\n          })}\n        </ul>\n      </Collapse>\n    </li>\n  );\n};\n\nconst MenuItem = ({ item, className, linkClassName }) => {\n  return (\n    <li className={classNames(\"side-nav-item\", className)}>\n      <MenuItemLink item={item} className={linkClassName} />\n    </li>\n  );\n};\n\nconst MenuItemLink = ({ item, className }) => {\n  return (\n    <Link\n      to={{ pathname: item.url }}\n      target={item.target}\n      className={classNames(\n        \"side-nav-link-ref\",\n        \"side-sub-nav-link\",\n        className,\n      )}\n      data-menu-key={item.key}\n    >\n      {item.icon && item.icon}\n      {item.badge && (\n        <span\n          className={classNames(\n            \"badge\",\n            \"bg-\" + item.badge.variant,\n            \"rounded-pill\",\n            \"font-10\",\n            \"float-end\",\n            {\n              \"text-dark\": item.badge.variant === \"light\",\n            },\n          )}\n        >\n          {item.badge.text}\n        </span>\n      )}\n      <span> {item.label} </span>\n    </Link>\n  );\n};\n\n/**\n * Renders the application menu\n */\n\ntype AppMenuProps = {\n  menuItems: Array<any>,\n};\n\nconst AppMenu = ({\n  menuItems,\n}: AppMenuProps): React$Element<React$FragmentType> => {\n  let location = useLocation();\n  const menuRef = useRef(null);\n\n  const [activeMenuItems, setActiveMenuItems] = useState([]);\n\n  /*\n   * toggle the menus\n   */\n  const toggleMenu = (menuItem, show) => {\n    if (show)\n      setActiveMenuItems([\n        menuItem[\"key\"],\n        ...findAllParent(menuItems, menuItem),\n      ]);\n  };\n\n  /**\n   * activate the menuitems\n   */\n  const activeMenu = useCallback(() => {\n    const div = document.getElementById(\"main-side-menu\");\n    let matchingMenuItem = null;\n\n    if (div) {\n      let items: any = div.getElementsByClassName(\"side-nav-link-ref\");\n      for (let i = 0; i < items.length; ++i) {\n        if (location.pathname === items[i].pathname) {\n          matchingMenuItem = items[i];\n          break;\n        }\n      }\n\n      if (matchingMenuItem) {\n        const mid = matchingMenuItem.getAttribute(\"data-menu-key\");\n        const activeMt = findMenuItem(menuItems, mid);\n        if (activeMt) {\n          setActiveMenuItems([\n            activeMt[\"key\"],\n            ...findAllParent(menuItems, activeMt),\n          ]);\n        }\n      }\n    }\n  }, [location.pathname, menuItems]);\n\n  useEffect(() => {\n    activeMenu();\n  }, [activeMenu]);\n\n  return (\n    <>\n      <ul className=\"side-nav\" ref={menuRef} id=\"main-side-menu\">\n        {(menuItems || []).map((item, idx) => {\n          return (\n            <React.Fragment key={idx}>\n              {item.isTitle ? (\n                <li className=\"side-nav-title side-nav-item\">{item.label}</li>\n              ) : (\n                <>\n                  {item.children ? (\n                    <MenuItemWithChildren\n                      item={item}\n                      toggleMenu={toggleMenu}\n                      subMenuClassNames=\"side-nav-second-level\"\n                      activeMenuItems={activeMenuItems}\n                      linkClassName=\"side-nav-link\"\n                    />\n                  ) : (\n                    <MenuItem\n                      item={item}\n                      linkClassName=\"side-nav-link\"\n                      className={\n                        activeMenuItems.includes(item.key)\n                          ? \"menuitem-active\"\n                          : \"\"\n                      }\n                    />\n                  )}\n                </>\n              )}\n            </React.Fragment>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default AppMenu;\n","// @flow\nimport React, { useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SimpleBar from \"simplebar-react\";\n\nimport { getMenuItems } from \"../helpers/menu\";\n\n// components\nimport AppMenu from \"./Menu\";\n\n// images\nimport logoSm from \"../assets/images/logo_sm.png\";\nimport logoDark from \"../assets/images/logo-dark.png\";\nimport logoDarkSm from \"../assets/images/logo_sm_dark.png\";\nimport logo from \"../assets/images/logo.png\";\nimport profileImg from \"../assets/images/users/avatar-1.jpg\";\n\n/* sidebar content */\nconst SideBarContent = ({ hideUserProfile }) => {\n  return (\n    <>\n      {!hideUserProfile && (\n        <div className=\"leftbar-user\">\n          <Link to=\"/\">\n            <img\n              src={profileImg}\n              alt=\"\"\n              height=\"42\"\n              className=\"rounded-circle shadow-sm\"\n            />\n            <span className=\"leftbar-user-name\">Dominic Keller</span>\n          </Link>\n        </div>\n      )}\n      <AppMenu menuItems={getMenuItems()} />\n      <div className=\"clearfix\" />\n    </>\n  );\n};\n\nconst LeftSidebar = ({ isCondensed, isLight, hideLogo, hideUserProfile }) => {\n  const menuNodeRef = useRef(null);\n\n  /**\n   * Handle the click anywhere in doc\n   */\n  const handleOtherClick = (e: any) => {\n    if (\n      menuNodeRef &&\n      menuNodeRef.current &&\n      menuNodeRef.current.contains(e.target)\n    )\n      return;\n    // else hide the menubar\n    if (document.body) {\n      document.body.classList.remove(\"sidebar-enable\");\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleOtherClick, false);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOtherClick, false);\n    };\n  }, []);\n\n  return (\n    <>\n      <div className=\"leftside-menu\" ref={menuNodeRef}>\n        {!hideLogo && (\n          <>\n            <Link to=\"/\" className=\"logo text-center logo-light\">\n              <span className=\"logo-lg\">\n                <img src={isLight ? logoDark : logo} alt=\"logo\" height=\"15\" />\n              </span>\n              <span className=\"logo-sm\">\n                <img\n                  src={isLight ? logoSm : logoDarkSm}\n                  alt=\"logo\"\n                  height=\"15\"\n                />\n              </span>\n            </Link>\n\n            <Link to=\"/\" className=\"logo text-center logo-dark\">\n              <span className=\"logo-lg\">\n                <img src={isLight ? logoDark : logo} alt=\"logo\" height=\"65\" />\n              </span>\n              <span className=\"logo-sm\">\n                <img\n                  src={isLight ? logoSm : logoDarkSm}\n                  alt=\"logo\"\n                  height=\"36\"\n                />\n              </span>\n            </Link>\n          </>\n        )}\n\n        {!isCondensed && (\n          <SimpleBar\n            style={{ maxHeight: \"100%\" }}\n            timeout={500}\n            scrollbarMaxSize={320}\n          >\n            <SideBarContent\n              menuClickHandler={() => { }}\n              isLight={isLight}\n              hideUserProfile={hideUserProfile}\n            />\n\n          </SimpleBar>\n        )}\n        {isCondensed && (\n          <SideBarContent isLight={isLight} hideUserProfile={hideUserProfile} />\n        )}\n      </div>\n    </>\n  );\n};\n\nLeftSidebar.defaultProps = {\n  hideLogo: false,\n  hideUserProfile: false,\n  isLight: false,\n  isCondensed: false,\n};\n\nexport default LeftSidebar;\n"],"names":["t","useTranslation","key","label","isTitle","url","icon","_jsx","RiDashboardLine","className","getMenuItems","MenuItems","findAllParent","menuItems","menuItem","parents","parent","findMenuItem","push","concat","_toConsumableArray","menuItemKey","i","length","found","children","MenuItemWithChildren","_ref","item","linkClassName","subMenuClassNames","activeMenuItems","toggleMenu","_useState","useState","includes","_useState2","_slicedToArray","open","setOpen","useEffect","_jsxs","classNames","Link","to","onClick","e","preventDefault","status","badge","variant","text","Collapse","in","map","child","React","_Fragment","MenuItem","_ref2","MenuItemLink","_ref3","pathname","target","_ref4","location","useLocation","menuRef","useRef","_useState3","_useState4","setActiveMenuItems","show","activeMenu","useCallback","div","document","getElementById","matchingMenuItem","items","getElementsByClassName","mid","getAttribute","activeMt","ref","id","idx","SideBarContent","hideUserProfile","src","profileImg","alt","height","AppMenu","LeftSidebar","isCondensed","isLight","hideLogo","menuNodeRef","handleOtherClick","current","contains","body","classList","remove","addEventListener","removeEventListener","logoDark","logo","logoSm","logoDarkSm","SimpleBar","style","maxHeight","timeout","scrollbarMaxSize","menuClickHandler","defaultProps"],"sourceRoot":""}